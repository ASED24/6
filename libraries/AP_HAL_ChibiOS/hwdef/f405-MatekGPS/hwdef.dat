# hw definition file for f405 Matek CAN GPS

# MCU class and specific type
MCU STM32F4xx STM32F405xx

# bootloader starts firmware at 64k
FLASH_RESERVE_START_KB 32

# store parameters in pages 11 and 12
define STORAGE_FLASH_PAGE 1
define HAL_STORAGE_SIZE 15360

# board ID for firmware load
APJ_BOARD_ID 1014

env AP_PERIPH 1
define PERIPH_FW TRUE
define HAL_BUILD_AP_PERIPH

# STM32_ST_USE_TIMER 5

# enable watchdog
define HAL_WATCHDOG_ENABLED_DEFAULT true

# crystal frequency
OSCILLATOR_HZ 8000000

# define CH_CFG_ST_FREQUENCY 100000
# define CH_CFG_ST_TIMEDELTA 0

FLASH_SIZE_KB 1024

STDOUT_SERIAL SD1
STDOUT_BAUDRATE 57600

# a LED to flash
PC13 LED OUTPUT LOW

# no ADC driver
define HAL_USE_ADC FALSE
define STM32_ADC_USE_ADC1 FALSE
define HAL_DISABLE_ADC_DRIVER TRUE

define HAL_NO_GPIO_IRQ
define SERIAL_BUFFERS_SIZE 512
define PORT_INT_REQUIRED_STACK 64

# avoid timer and RCIN threads to save memory
define HAL_NO_RCIN_THREAD

define HAL_USE_RTC FALSE
define DISABLE_SERIAL_ESC_COMM TRUE
define NO_DATAFLASH TRUE

define DMA_RESERVE_SIZE 0

define HAL_DISABLE_LOOP_DELAY

define HAL_NO_GCS
define HAL_NO_LOGGING
define HAL_NO_MONITOR_THREAD

define HAL_MINIMIZE_FEATURES 0

define HAL_DEVICE_THREAD_STACK 768

define AP_PARAM_MAX_EMBEDDED_PARAM 0

# use the app descriptor needed by MissionPlanner for CAN upload
env APP_DESCRIPTOR MissionPlanner

# reserve 256 bytes for comms between app and bootloader
RAM_RESERVE_START 256

# keep ROMFS uncompressed as we don't have enough RAM
# to uncompress the bootloader at runtime
env ROMFS_UNCOMPRESSED True


# ----------- SPI1 IMU ------------------
PA5 SPI1_SCK SPI1
PA6 SPI1_MISO SPI1
PA7 SPI1_MOSI SPI1
PA4 MPU_CS CS

# SPIDEV mpu6000 SPI1 DEVID1  MPU_CS MODE3  1*MHZ  4*MHZ
# IMU Invensense SPI:mpu6000 ROTATION_YAW_180

# ----------- SPI2 COMPASS -------------
PB13 SPI2_SCK SPI2
PC2  SPI2_MISO SPI2
PC3  SPI2_MOSI SPI2
PC5  MAG_CS CS

# SPIDEV rm3100 SPI2 DEVID1   MAG_CS MODE0  1*MHZ  1*MHZ
# COMPASS RM3100 SPI:rm3100 false ROTATION_PITCH_180

# ----------- I2C bus -------------
I2C_ORDER I2C2

PB10 I2C2_SCL I2C2
PB11 I2C2_SDA I2C2

define HAL_I2C_CLEAR_ON_TIMEOUT 0

define HAL_I2C_INTERNAL_MASK 1

# added QMC5883L mag on I2C
COMPASS QMC5883L I2C:0:0xd false ROTATION_PITCH_180_YAW_90

# I2C baro (DPS310)
BARO DPS280 I2C:0:0x76

# ----------- CAN bus ---------------
PB8 CAN1_RX CAN1
PB9 CAN1_TX CAN1
# PB5 GPIO_CAN1_SILENT OUTPUT PUSHPULL SPEED_LOW LOW
define HAL_CAN_RX_QUEUE_SIZE 32
define HAL_CAN_POOL_SIZE 6000

# use a default node ID so this works with MSP only
define HAL_CAN_DEFAULT_NODE_ID 113

define CAN_APP_NODE_NAME "org.ardupilot.f405_MatekGPS"

# ----------- UARTs ---------------
SERIAL_ORDER USART1 EMPTY USART3 USART2

# USART1, for debug
PA9  USART1_TX USART1 SPEED_HIGH NODMA
PA10 USART1_RX USART1 SPEED_HIGH NODMA

# USART2, connected to GPS
PA2 USART2_TX USART2 SPEED_HIGH NODMA
PA3 USART2_RX USART2 SPEED_HIGH NODMA

# USART3, for MSP
PC10  USART3_TX USART3 SPEED_HIGH NODMA
PC11  USART3_RX USART3 SPEED_HIGH NODMA

# ----------------------

# enable builtin GPS, mag and baro
# also allow for airspeed on i2c port, and rangefinder on MSP port
define HAL_PERIPH_ENABLE_GPS
define HAL_PERIPH_ENABLE_MAG
define HAL_PERIPH_ENABLE_BARO
define HAL_PERIPH_ENABLE_AIRSPEED
define HAL_PERIPH_ENABLE_RANGEFINDER
define HAL_PERIPH_ENABLE_MSP

# disable dual GPS and GPS blending to save flash space
define GPS_MAX_RECEIVERS 1
define GPS_MAX_INSTANCES 1
define HAL_COMPASS_MAX_SENSORS 1

# allow for rangefinder to be plugged in on "MSP" port
define RANGEFINDER_MAX_INSTANCES 1
define ADSB_PORT hal.serial(1)
define HAL_PERIPH_ENABLE_ADSB

define HAL_MSP_ENABLED 1

define GPS_MAX_RATE_MS 200

# MS4525 sensor by default
define HAL_AIRSPEED_TYPE_DEFAULT 1
define AIRSPEED_MAX_SENSORS 1

define HAL_BARO_ALLOW_INIT_NO_BARO

