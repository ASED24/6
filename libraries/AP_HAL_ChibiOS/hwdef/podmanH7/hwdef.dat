# hw definition file for processing by chibios_hwdef.py

# MCU class and specific type
MCU STM32H7xx STM32H743xx

# crystal frequency
OSCILLATOR_HZ 24000000

# board ID for firmware load
APJ_BOARD_ID 1117

FLASH_SIZE_KB 2048

# supports upto 8MBits/s
CANFD_SUPPORTED 8

# with 2M flash we can afford to optimize for speed
env OPTIMIZE -O2

FLASH_RESERVE_START_KB 128

define HAL_STORAGE_SIZE 32768

# order of I2C buses
I2C_ORDER I2C1 I2C2 I2C4

# order of UARTs (and USB)
SERIAL_ORDER OTG1 USART1 USART2 USART3 UART4 UART7 UART8 OTG2

# UART for IOMCU
IOMCU_UART USART6

#######################################################################################

PA0 UART4_TX UART4 
PA1 UART4_RX UART4
PA2 BATT_VOLTAGE_SENS ADC1 SCALE(1)
PA3 BATT_CURRENT_SENS ADC1 SCALE(1)
PA4 MPU_EXT_DRDY2 INPUT
PA5 SPI1_SCK SPI1
PA6 SPI1_MISO SPI1
PA7 SPI1_MOSI SPI1
PA8 MPU_EXT_DRDY3 INPUT
PA9 USART1_TX USART1
PA10 USART1_RX USART1
PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1
PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD
PA15 TIM2_CH1 TIM2 GPIO(77) ALARM

PB0 TIM3_CH3 TIM3 PWM(7) GPIO(56)
PB1 TIM3_CH4 TIM3 PWM(8) GPIO(57)
PB2 BOOT1 INPUT
PB3 SPI3_SCK SPI3
PB4 SPI3_MISO SPI3
PB5 SPI3_MOSI SPI3
PB6 CAN2_TX CAN2
PB7 I2C4_SDA I2C4
PB8 I2C1_SCL I2C1
PB9 I2C1_SDA I2C1
PB10 I2C2_SCL I2C2
PB11 I2C2_SDA I2C2
PB12 CAN2_RX CAN2
PB13 SPI2_SCK SPI2
PB14 SPI2_MISO SPI2
PB15 SPI2_MOSI SPI2

PC0 MPU_INT_DRDY INPUT
PC1 MPU_INT_DRDY2 INPUT
PC2 MPU_CS CS
PC3 AUX_POWER ADC1 SCALE(1)
PC4 AUX_ADC2 ADC1 SCALE(1)
PC5 PRESSURE_SENS ADC1 SCALE(2)
PC6 USART6_TX USART6
PC7 USART6_RX USART6
PC8 SDMMC1_D0 SDMMC1
PC9 SDMMC1_D1 SDMMC1
PC10 SDMMC1_D2 SDMMC1
PC11 SDMMC1_D3 SDMMC1
PC12 SDMMC1_CK SDMMC1
PC13 MPU_EXT_CS2 CS
PC14 BARO_EXT_CS CS
PC15 BARO_EXT_CS2 CS

PD0 CAN1_RX CAN1
PD1 CAN1_TX CAN1
PD2 SDMMC1_CMD SDMMC1
PD3 USART2_CTS USART2
PD3 EXTERN_GPIO4 OUTPUT GPIO(4) ALT(1)
PD4 USART2_RTS USART2
PD4 EXTERN_GPIO5 OUTPUT GPIO(5) ALT(1)
PD5 USART2_TX USART2
PD6 USART2_RX USART2
PD7 BARO_CS CS
PD8 USART3_TX USART3
PD9 USART3_RX USART3
PD10 FRAM_CS CS SPEED_VERYLOW
PD11 MAG_CS CS
PD12 I2C4_SCL I2C4
PD13 TIM4_CH2 TIM4 PWM(5) GPIO(54)
PD14 TIM4_CH3 TIM4 PWM(6) GPIO(55)
PD15 MAG_DRDY INPUT

PE0 UART8_RX UART8
PE1 UART8_TX UART8
PE2 SPI4_SCK  SPI4
PE3 MPU_EXT_DRDY1 INPUT
PE4 MPU_EXT_CS CS
PE5 SPI4_MISO SPI4
PE6 SPI4_MOSI SPI4
PE7 UART7_RX UART7
PE8 UART7_TX UART7
PE9  TIM1_CH1 TIM1 PWM(4) GPIO(53)
PE10 LED_RED OUTPUT HIGH OPENDRAIN GPIO(90)
PE11 TIM1_CH2 TIM1 PWM(3) GPIO(52)
PE12 LED_GREEN OUTPUT HIGH OPENDRAIN GPIO(91)
PE13 TIM1_CH3 TIM1 PWM(2) GPIO(51)
PE14 TIM1_CH4 TIM1 PWM(1) GPIO(50)
PE15 LED_BLUE OUTPUT HIGH OPENDRAIN GPIO(92)

SPIDEV ramtron        SPI2 DEVID10 FRAM_CS      MODE3  8*MHZ  8*MHZ

SPIDEV imus1d4        SPI1 DEVID4  MPU_CS       MODE3 10*MHZ 10*MHZ
SPIDEV s1barod3       SPI1 DEVID3  BARO_CS      MODE3  1*MHZ  1*MHZ

SPIDEV imus4d1        SPI4 DEVID1  MPU_EXT_CS   MODE3  2*MHZ  8*MHZ
SPIDEV s4barod2       SPI4 DEVID2  BARO_EXT_CS  MODE3  1*MHZ  1*MHZ

SPIDEV imus3d5        SPI3 DEVID5  MPU_EXT_CS2  MODE3  2*MHZ  8*MHZ
SPIDEV s3barod6       SPI3 DEVID6  BARO_EXT_CS2 MODE3  1*MHZ  1*MHZ

IMU Invensensev3 SPI:imus3d5 ROTATION_NONE
IMU BMI270 SPI:imus1d4 ROTATION_NONE
IMU Invensensev3 SPI:imus4d1 ROTATION_NONE

BARO SPL06 SPI:s3barod6
BARO SPL06 SPI:s1barod3
BARO SPL06 SPI:s4barod2

define HAL_DEFAULT_INS_FAST_SAMPLE 7
define HAL_EKF_IMU_MASK_DEFAULT 7
define HAL_PROBE_EXTERNAL_I2C_COMPASSES


# Nnow some defines for logging and terrain data files.
define HAL_BOARD_LOG_DIRECTORY "/APM/LOGS"
define HAL_BOARD_TERRAIN_DIRECTORY "/APM/TERRAIN"
# Enable FAT filesystem support (needs a microSD defined via SDMMC).
define HAL_OS_FATFS_IO 1

# allow to have have a dedicated safety switch pin
define HAL_HAVE_SAFETY_SWITCH 1

# Enable RAMTROM parameter storage.
define HAL_WITH_RAMTRON 1

# Setup the IMU heater
define HAL_HAVE_IMU_HEATER 1
define HAL_IMU_TEMP_DEFAULT 45
define HAL_IMUHEAT_P_DEFAULT 50
define HAL_IMUHEAT_I_DEFAULT 0.07
define HAL_IMU_TEMP_MARGIN_LOW_DEFAULT 5

# Now setup the battery pins driver analog pins
define HAL_BATT_VOLT_PIN 2
define HAL_BATT_CURR_PIN 3
define HAL_BATT_AMP_PERVLT 39.877
define HAL_BATT_VOLT_MULT 12.02
define HAL_BATT_VOLT_SCALE 10.1
define HAL_BATT_CURR_SCALE 17.0
define HAL_BATT2_VOLT_PIN 13
define HAL_BATT2_CURR_PIN 14
define HAL_BATT2_AMP_PERVLT 39.877
define HAL_BATT2_VOLT_MULT 12.02

# pixracer has 3 LEDs, Red, Green, Blue
define HAL_HAVE_PIXRACER_LED
define HAL_GPIO_LED_ON  0
define HAL_GPIO_LED_OFF 1
define HAL_GPIO_A_LED_PIN 90
define HAL_GPIO_B_LED_PIN 91
define HAL_GPIO_C_LED_PIN 92

# List of files to put in ROMFS. For fmuv3 we need an IO firmware so
# we can automatically update the IOMCU firmware on boot. The format
# is "ROMFS ROMFS-filename source-filename". Paths are relative to the
# ardupilot root.
ROMFS io_firmware.bin Tools/IO_Firmware/iofirmware_highpolh.bin

DMA_NOSHARE SPI1* SPI4* USART6*

# enable DFU reboot for installing bootloader
# note that if firmware is build with --secure-bl then DFU is
# disabled
ENABLE_DFU_BOOT 1

# build ABIN for flash-from-bootloader support:
env BUILD_ABIN True
