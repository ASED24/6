# hw definition file for processing by chibios_pins.py

# MCU class and specific type
MCU STM32F303 STM32F303xC

# bootloader starts firmware at 22k + 4k (STORAGE_FLASH)
FLASH_RESERVE_START_KB 26

# store parameters in pages 11 and 12
STORAGE_FLASH_PAGE 11
define HAL_STORAGE_SIZE 800

# board ID for firmware load
APJ_BOARD_ID AP_HW_TULIP_BATTMON

# setup build for a peripheral firmware
env AP_PERIPH 1

# enable watchdog

# crystal frequency
OSCILLATOR_HZ 0

define CH_CFG_ST_FREQUENCY 1000
define CH_CFG_ST_TIMEDELTA 0

# assume the 256k flash part for now
FLASH_SIZE_KB 256

# no ADC
define HAL_USE_ADC FALSE

# no UARTS
define HAL_NO_UARTDRIVER 1

# order of UARTs
SERIAL_ORDER

# a LED to flash
PA2 LED OUTPUT LOW

define HAL_CAN_POOL_SIZE 6000

# only one I2C bus in normal config
PA15 I2C1_SCL I2C1
PB7 I2C1_SDA I2C1

define HAL_NO_GPIO_IRQ
define PORT_INT_REQUIRED_STACK 64

# avoid timer and RCIN threads to save memory
define HAL_NO_RCIN_THREAD
define HAL_NO_RCOUT_THREAD

define HAL_USE_RTC FALSE
define DISABLE_SERIAL_ESC_COMM TRUE

define DMA_RESERVE_SIZE 0

# MAIN_STACK is stack of initial thread and of ISRs
MAIN_STACK 0x300

# PROCESS_STACK controls stack for main thread
PROCESS_STACK 0xA00
define HAL_DISABLE_LOOP_DELAY

# enable CAN support
PB8 CAN_RX CAN
PB9 CAN_TX CAN

# debugger support
PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

define HAL_USE_I2C TRUE
define STM32_I2C_USE_I2C1 TRUE

define STORAGE_THD_WA_SIZE 512
define IO_THD_WA_SIZE      512

# only one I2C bus
I2C_ORDER I2C1

define HAL_I2C_CLEAR_ON_TIMEOUT 0

define HAL_DEVICE_THREAD_STACK 0x200

define AP_PARAM_MAX_EMBEDDED_PARAM 512

define HAL_I2C_INTERNAL_MASK 1

define HAL_PERIPH_ENABLE_BATTERY

define HAL_BATT_MONITOR_DEFAULT 7
define AP_PERIPH_BATTERY_MODEL_NAME "Tulip-BattMon"
define AP_BATTERY_SMBUS_ENABLED 1

# keep ROMFS uncompressed as we don't have enough RAM
# to uncompress the bootloader at runtime
env ROMFS_UNCOMPRESSED True

# reduce the number of CAN RX Buffer
define HAL_CAN_RX_QUEUE_SIZE 64
